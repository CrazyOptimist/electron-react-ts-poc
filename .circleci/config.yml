version: 2.1

executors:
  electron-builder:
    docker:
      - image: electronuserland/builder:14
    working_directory: ~/project
  github-releaser:
    docker:
      - image: golang:1.16-alpine
    working_directory: ~/project

jobs:
  install-deps:
    executor: electron-builder
    steps:
      - checkout
      - restore_cache:
          keys:
            - node_deps-{{ checksum "yarn.lock" }}
      - run:
          name: install dependencies
          command: yarn --frozen-lockfile
      - save_cache:
          key: node_deps-{{ checksum "yarn.lock" }}
          paths:
            - ~/project/node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  lint:
    executor: electron-builder
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: run lint and prettier
          command: yarn check-all
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  build-ubuntu:
    executor: electron-builder
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: install dpkg and fakeroot
          command: |
            apt-get update -y
            apt-get install -y dpkg fakeroot
      - run:
          name: build for linux(deb)
          command: yarn make
      - store_artifacts:
          path: ~/project/out/make

  publish-github-release:
    executor: github-releaser
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: publish release on github
          command: |
            go get github.com/tcnksm/ghr
            VERSION=<< pipeline.git.tag >>
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -delete ${VERSION} ~/project/out/make

workflows:
  lint-test-package:
    jobs:
      - install-deps:
          filters: &filters-commit
            tags:
              only: /^v[0-9]+(\.[0-9]+).*/
      - lint:
          requires:
            - install-deps
          filters:
            <<: *filters-commit
      - build-ubuntu:
          filters: &filters-build
            <<: *filters-commit
            branches:
              ignore: /.*/
          requires:
            - lint
      - publish-github-release:
          context: global
          filters:
            <<: *filters-build
          requires:
            - build-ubuntu
